; grammar name Category III
; grammar tier High
; import common.txt

$Main     = $pcat3 | $cat3
$pcat3    = $polite $cat3

$cat3     = $complexman
$cat3     = $fndobj
$cat3     = $incomplete
$cat3     = $erroneous
$cat3     = $followout


##############################################################################
#
# Production Rules required by common.txt
#
##############################################################################
; Define an object type
$object   = bowl | cloth | tray

; Rule for finding a specific (named) person
$findp    = $vbfind a $pgenders
$findp    = $vbfind a person {gesture}
$findp    = $vbfind a person $pose

; A named or described person at the given place
$whowhere = {name 1 meta: {name 1} is at the {beacon 1}}
$whowhere = the {gesture} person in the {room}



##############################################################################
#
# Complex manipulation
#
##############################################################################
$complexman  = $cmanwarn $cmancmd

$cmancmd     = Pour some cereals into the bowl
$cmancmd     = $goroom {void meta: All access doors to {room 1} bust be closed.}
$cmancmd     = $vbbtake the {kobject} to the {placement 2 meta: Block access to {placement 2} with a movable object or furniture}
$cmancmd     = $vbbring me the $abspos object $cmanobjsrc
$cmancmd     = $vbbring me the object $relpos the {object}  $cmanobjsrc
$cmancmd     = $vbbring me the $oprop (object | {category}) $cmanobjsrc
$cmanwarn    = {void meta: This command is for DSPL and OPL only}
$cmanobjsrc  = from the {placement 2 meta: Place at least 5 objects in the {placement 2}}



##############################################################################
#
# Incomplete commands
#
##############################################################################
$incomplete  = $vbfollow {name 1 meta: {name 1} is at the {beacon 1}}
$incomplete  = $cmanwarn $vbbring me the {object?}
$incomplete  = $vbdeliver {object?} to $someone
$incomplete  = $vbguide {name 1 meta: {name 1} is at the {beacon 1}} to the {beacon 2}
$incomplete  = meet $inguidewho and $vbguide {pron}
$incomplete  = $gobeacon, meet $inguidewho, and $vbguide {pron}

$inguidewho  = {name 1 meta: {name 1} must be taken from {beacon 1} to {beacon 2}, but he will get lost before reaching it}



##############################################################################
#
# Wrong commands
#
##############################################################################
$erroneous   = $cmanwarn $vbbtake the $errnoobj to the {placement 2}
$erroneous   = $cmanwarn $vbplace the $errnoobj on the {placement 2}
$erroneous   = $cmanwarn $vbbring me the $errnoobj

$erroneous   = $vbguide $errnoper from the {beacon 1} to the {beacon 2}
$erroneous   = $vbguide {name 1} from the {beacon 1} to the {beacon 1 meta: Destination is {beacon 2}}
$erroneous   = $vbguide the $ernamperobj from the {beacon 1} to the {beacon 2}

$erroneous   = $gobeacon, meet {name 1}, and $vbfollow {pron} to the {beacon 1 meta: Destination is {room 2}}
$erroneous   = $gobeacon, meet $errnoper, and $vbfollow {pron} to the {room 2}
$erroneous   = $gobeacon, meet the $ernamperobj, and $vbfollow it {void meta: Destination is {room 2}}

$errnoobj    = {object 1 meta: is not at the {placement 1} but somewhere else in the same room}
$errnoper    = {name 1 meta: is not at the {beacon 1} but somewhere else in the same room}
$ernamperobj = {object 1 meta: Replace {object 1} with {name 1}}
$ernamperobj = {category 1 meta: Replace {category 1} with {name 1}}


##############################################################################
#
# Follow [& guide]
#
##############################################################################
$followout   = $fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $goroom
$followout   = $fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $vbguide {pron} back

$fllwoutdest = {void meta: The robot must follow {name 1} outside the arena}



##############################################################################
#
# Find objects
#
##############################################################################
$fndobj   = tell me which are the three $oprop (objects | {category}) on the {placement 1 meta: Place at least 5 objects on the {placement 1}}
$fndobj   = $vbfind three {category} in the {room meta: Place only 3 objects in the room}



##############################################################################
#
# Rules
#
##############################################################################
; Position
$abspos      = (left | right) most
$relpos      = at the (left | right) of 
$relpos      = on top of
$relpos      = above | behind | under 
